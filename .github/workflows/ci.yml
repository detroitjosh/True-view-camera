name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Run ESLint
      run: npm run lint --if-present
      continue-on-error: true

  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Run tests
      run: npm test --if-present
      continue-on-error: true

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Generate native directories
      run: npx expo prebuild --platform android --clean
    
    - name: Build Android APK
      working-directory: android
      run: ./gradlew assembleDebug --no-daemon
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-debug.apk
        path: android/app/build/outputs/apk/debug/app-debug.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Generate native directories
      run: npx expo prebuild --platform ios --clean
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
    
    - name: Build iOS App
      run: |
        cd ios
        xcodebuild -workspace TrueViewCamera.xcworkspace \
          -scheme TrueViewCamera \
          -configuration Debug \
          -sdk iphonesimulator \
          -derivedDataPath build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGNING_REQUIRED=NO
      continue-on-error: true
